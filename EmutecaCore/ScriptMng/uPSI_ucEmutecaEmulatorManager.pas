unit uPSI_ucEmutecaEmulatorManager;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_ucEmutecaEmulatorManager = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_cEmutecaEmulatorManager(CL: TPSPascalCompiler);
procedure SIRegister_ucEmutecaEmulatorManager(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_cEmutecaEmulatorManager(CL: TPSRuntimeClassImporter);
procedure RIRegister_ucEmutecaEmulatorManager(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   LazFileUtils
  ,LazUTF8
  ,IniFiles
  ,uaCHXStorable
  ,uEmutecaCommon
  ,ucEmutecaEmulatorList
  ,ucEmutecaEmulatorManager
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ucEmutecaEmulatorManager]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_cEmutecaEmulatorManager(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'caCHXStorableIni', 'cEmutecaEmulatorManager') do
  with CL.AddClassN(CL.FindClass('caCHXStorableIni'),'cEmutecaEmulatorManager') do
  begin
    RegisterProperty('ProgressCallBack', 'TEmutecaProgressCallBack', iptrw);
    RegisterMethod('Procedure ClearData');
    RegisterMethod('Procedure LoadData');
    RegisterMethod('Procedure SaveData');
    RegisterMethod('Procedure AssingAllTo( aList : TStrings)');
    RegisterMethod('Procedure AssingEnabledTo( aList : TStrings)');
    RegisterMethod('Function RunEmulator( const EmulatorID, GameFile : string) : longword');
    RegisterProperty('FullList', 'cEmutecaEmulatorList', iptr);
    RegisterProperty('EnabledList', 'cEmutecaEmulatorList', iptr);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_ucEmutecaEmulatorManager(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('rsLoadingEmulatorList','String').SetString( 'Loading emulator list...');
 CL.AddConstantN('rsSavingEmulatorList','String').SetString( 'Saving emulator list...');
  SIRegister_cEmutecaEmulatorManager(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure cEmutecaEmulatorManagerEnabledList_R(Self: cEmutecaEmulatorManager; var T: cEmutecaEmulatorList);
begin T := Self.EnabledList; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaEmulatorManagerFullList_R(Self: cEmutecaEmulatorManager; var T: cEmutecaEmulatorList);
begin T := Self.FullList; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaEmulatorManagerProgressCallBack_W(Self: cEmutecaEmulatorManager; const T: TEmutecaProgressCallBack);
begin Self.ProgressCallBack := T; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaEmulatorManagerProgressCallBack_R(Self: cEmutecaEmulatorManager; var T: TEmutecaProgressCallBack);
begin T := Self.ProgressCallBack; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_cEmutecaEmulatorManager(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(cEmutecaEmulatorManager) do
  begin
    RegisterPropertyHelper(@cEmutecaEmulatorManagerProgressCallBack_R,@cEmutecaEmulatorManagerProgressCallBack_W,'ProgressCallBack');
    RegisterMethod(@cEmutecaEmulatorManager.ClearData, 'ClearData');
    RegisterMethod(@cEmutecaEmulatorManager.LoadData, 'LoadData');
    RegisterMethod(@cEmutecaEmulatorManager.SaveData, 'SaveData');
    RegisterMethod(@cEmutecaEmulatorManager.AssingAllTo, 'AssingAllTo');
    RegisterMethod(@cEmutecaEmulatorManager.AssingEnabledTo, 'AssingEnabledTo');
    RegisterMethod(@cEmutecaEmulatorManager.RunEmulator, 'RunEmulator');
    RegisterPropertyHelper(@cEmutecaEmulatorManagerFullList_R,nil,'FullList');
    RegisterPropertyHelper(@cEmutecaEmulatorManagerEnabledList_R,nil,'EnabledList');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_ucEmutecaEmulatorManager(CL: TPSRuntimeClassImporter);
begin
  RIRegister_cEmutecaEmulatorManager(CL);
end;

 
 
{ TPSImport_ucEmutecaEmulatorManager }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ucEmutecaEmulatorManager.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ucEmutecaEmulatorManager(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_ucEmutecaEmulatorManager.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_ucEmutecaEmulatorManager(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
