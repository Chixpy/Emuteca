unit uPSI_uaEmutecaCustomGroup;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_uaEmutecaCustomGroup = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_caEmutecaCustomGroup(CL: TPSPascalCompiler);
procedure SIRegister_uaEmutecaCustomGroup(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_caEmutecaCustomGroup(CL: TPSRuntimeClassImporter);
procedure RIRegister_uaEmutecaCustomGroup(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IniFiles
  ,LazUTF8
  ,uaCHXStorable
  ,uEmutecaCommon
  ,ucEmutecaPlayingStats
  ,uaEmutecaCustomGroup
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_uaEmutecaCustomGroup]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_caEmutecaCustomGroup(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'caCHXStorableTxt', 'caEmutecaCustomGroup') do
  with CL.AddClassN(CL.FindClass('caCHXStorableTxt'),'caEmutecaCustomGroup') do
  begin
    RegisterMethod('Function GetActualTitle : string');
    RegisterMethod('Function CompareID( aID : string) : integer');
    RegisterMethod('Function MatchID( aID : string) : boolean');
    RegisterMethod('Procedure ImportFrom( aGroup : caEmutecaCustomGroup)');
    RegisterMethod('Procedure SearchAllRelatedFiles( OutFileList : TStrings; aFolder : string; Extensions : TStrings; AutoExtract : boolean)');
    RegisterMethod('Function SearchFirstRelatedFile( aFolder : string; Extensions : TStrings; AutoExtract : boolean) : string');
    RegisterProperty('ID', 'string', iptrw);
    RegisterProperty('Title', 'string', iptrw);
    RegisterProperty('Year', 'string', iptrw);
    RegisterProperty('Developer', 'string', iptrw);
    RegisterProperty('Stats', 'cEmutecaPlayingStats', iptr);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_uaEmutecaCustomGroup(CL: TPSPascalCompiler);
begin
  SIRegister_caEmutecaCustomGroup(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure caEmutecaCustomGroupStats_R(Self: caEmutecaCustomGroup; var T: cEmutecaPlayingStats);
begin T := Self.Stats; end;

(*----------------------------------------------------------------------------*)
procedure caEmutecaCustomGroupDeveloper_W(Self: caEmutecaCustomGroup; const T: string);
begin Self.Developer := T; end;

(*----------------------------------------------------------------------------*)
procedure caEmutecaCustomGroupDeveloper_R(Self: caEmutecaCustomGroup; var T: string);
begin T := Self.Developer; end;

(*----------------------------------------------------------------------------*)
procedure caEmutecaCustomGroupYear_W(Self: caEmutecaCustomGroup; const T: string);
begin Self.Year := T; end;

(*----------------------------------------------------------------------------*)
procedure caEmutecaCustomGroupYear_R(Self: caEmutecaCustomGroup; var T: string);
begin T := Self.Year; end;

(*----------------------------------------------------------------------------*)
procedure caEmutecaCustomGroupTitle_W(Self: caEmutecaCustomGroup; const T: string);
begin Self.Title := T; end;

(*----------------------------------------------------------------------------*)
procedure caEmutecaCustomGroupTitle_R(Self: caEmutecaCustomGroup; var T: string);
begin T := Self.Title; end;

(*----------------------------------------------------------------------------*)
procedure caEmutecaCustomGroupID_W(Self: caEmutecaCustomGroup; const T: string);
begin Self.ID := T; end;

(*----------------------------------------------------------------------------*)
procedure caEmutecaCustomGroupID_R(Self: caEmutecaCustomGroup; var T: string);
begin T := Self.ID; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_caEmutecaCustomGroup(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(caEmutecaCustomGroup) do
  begin
    RegisterMethod(@caEmutecaCustomGroup.GetActualTitle, 'GetActualTitle');
    RegisterMethod(@caEmutecaCustomGroup.CompareID, 'CompareID');
    RegisterMethod(@caEmutecaCustomGroup.MatchID, 'MatchID');
    RegisterMethod(@caEmutecaCustomGroup.ImportFrom, 'ImportFrom');
    RegisterVirtualMethod(@caEmutecaCustomGroup.SearchAllRelatedFiles, 'SearchAllRelatedFiles');
    RegisterVirtualMethod(@caEmutecaCustomGroup.SearchFirstRelatedFile, 'SearchFirstRelatedFile');
    RegisterPropertyHelper(@caEmutecaCustomGroupID_R,@caEmutecaCustomGroupID_W,'ID');
    RegisterPropertyHelper(@caEmutecaCustomGroupTitle_R,@caEmutecaCustomGroupTitle_W,'Title');
    RegisterPropertyHelper(@caEmutecaCustomGroupYear_R,@caEmutecaCustomGroupYear_W,'Year');
    RegisterPropertyHelper(@caEmutecaCustomGroupDeveloper_R,@caEmutecaCustomGroupDeveloper_W,'Developer');
    RegisterPropertyHelper(@caEmutecaCustomGroupStats_R,nil,'Stats');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_uaEmutecaCustomGroup(CL: TPSRuntimeClassImporter);
begin
  RIRegister_caEmutecaCustomGroup(CL);
end;

 
 
{ TPSImport_uaEmutecaCustomGroup }
(*----------------------------------------------------------------------------*)
procedure TPSImport_uaEmutecaCustomGroup.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_uaEmutecaCustomGroup(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_uaEmutecaCustomGroup.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_uaEmutecaCustomGroup(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
