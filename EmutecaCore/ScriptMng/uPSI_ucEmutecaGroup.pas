unit uPSI_ucEmutecaGroup;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_ucEmutecaGroup = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_cEmutecaGroup(CL: TPSPascalCompiler);
procedure SIRegister_ucEmutecaGroup(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_cEmutecaGroup(CL: TPSRuntimeClassImporter);
procedure RIRegister_ucEmutecaGroup(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   LazFileUtils
  ,LazUTF8
  ,uEmutecaCommon
  ,uaEmutecaCustomSystem
  ,uaEmutecaCustomGroup
  ,ucEmutecaSoftList
  ,ucEmutecaGroup
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ucEmutecaGroup]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_cEmutecaGroup(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'caEmutecaCustomGroup', 'cEmutecaGroup') do
  with CL.AddClassN(CL.FindClass('caEmutecaCustomGroup'),'cEmutecaGroup') do
  begin
    RegisterProperty('SoftList', 'cEmutecaSoftList', iptr);
    RegisterProperty('CachedSystem', 'caEmutecaCustomSystem', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_ucEmutecaGroup(CL: TPSPascalCompiler);
begin
  SIRegister_cEmutecaGroup(CL);
  CL.AddTypeS('TEmutecaReturnGroupCB', 'Function ( aGroup : cEmutecaGroup) : bo'
   +'olean');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure cEmutecaGroupCachedSystem_W(Self: cEmutecaGroup; const T: caEmutecaCustomSystem);
begin Self.CachedSystem := T; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaGroupCachedSystem_R(Self: cEmutecaGroup; var T: caEmutecaCustomSystem);
begin T := Self.CachedSystem; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaGroupSoftList_R(Self: cEmutecaGroup; var T: cEmutecaSoftList);
begin T := Self.SoftList; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_cEmutecaGroup(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(cEmutecaGroup) do
  begin
    RegisterPropertyHelper(@cEmutecaGroupSoftList_R,nil,'SoftList');
    RegisterPropertyHelper(@cEmutecaGroupCachedSystem_R,@cEmutecaGroupCachedSystem_W,'CachedSystem');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_ucEmutecaGroup(CL: TPSRuntimeClassImporter);
begin
  RIRegister_cEmutecaGroup(CL);
end;

 
 
{ TPSImport_ucEmutecaGroup }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ucEmutecaGroup.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ucEmutecaGroup(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_ucEmutecaGroup.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_ucEmutecaGroup(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
