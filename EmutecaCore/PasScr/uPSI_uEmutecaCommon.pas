unit uPSI_uEmutecaCommon;

{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis.
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface

uses
  SysUtils
  , Classes
  , uPSComponent
  , uPSRuntime
  , uPSCompiler;

type
  (*----------------------------------------------------------------------------*)
  TPSImport_uEmutecaCommon = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript;
      const ri: TPSRuntimeClassImporter); override;
  end;


{ compile-time registration functions }
procedure SIRegister_uEmutecaCommon(CL: TPSPascalCompiler);

{ run-time registration functions }

procedure Register;

implementation

uses
  uEmutecaCommon;




procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_uEmutecaCommon]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_uEmutecaCommon(CL: TPSPascalCompiler);
begin
  CL.AddConstantN('krsEmuteca', 'String').SetString(krsEmuteca);
  CL.AddConstantN('krsEmutecaGameSubFolder', 'String').SetString(krsEmutecaGameSubFolder);
  CL.AddConstantN('kGroupSectionKey', 'String').SetString(kGroupSectionKey);
  CL.AddConstantN('kEmutecaVirtualFolderExt', 'String').SetString(kEmutecaVirtualFolderExt);
  CL.AddConstantN('kEmutecaVirtualGroupExt', 'String').SetString(kEmutecaVirtualGroupExt);
  CL.AddConstantN('kEmutecaVirtualGameExt', 'String').SetString(kEmutecaVirtualGameExt);
  CL.AddConstantN('kEmutecaExecErrorNoGame', 'LongInt').SetInt(kEmutecaExecErrorNoGame);
  CL.AddConstantN('kEmutecaDecompressError', 'LongInt').SetInt(kEmutecaDecompressError);
  CL.AddConstantN('krsCRC32', 'String').SetString(krsCRC32);
  CL.AddConstantN('krsSHA1', 'String').SetString(krsSHA1);
  CL.AddConstantN('krsFileName', 'String').SetString(krsFileName);
  CL.AddConstantN('krsCustom', 'String').SetString(krsCustom);
  CL.AddConstantN('krsGameKey', 'String').SetString(rsGameKey);
  CL.AddConstantN('krsZones', 'String').SetString(rsZones);
  CL.AddConstantN('krsDeveloper', 'String').SetString(rsDeveloper);
  CL.AddConstantN('krsPublisher', 'String').SetString(rsPublisher);
  CL.AddConstantN('krsVersion', 'String').SetString(rsVersion);
  CL.AddConstantN('krsFilename', 'String').SetString(rsFilename);
  CL.AddConstantN('krsFmtNItems', 'String').SetString(rsFmtNItems);
  CL.AddConstantN('krsFmtNTimes', 'String').SetString(rsFmtNTimes);
  CL.AddConstantN('krsNever', 'String').SetString(rsNever);
  CL.AddConstantN('krsUnknown', 'String').SetString(rsUnknown);
  CL.AddConstantN('krsFmtApplicationTitle', 'String').SetString(rsFmtApplicationTitle);
  CL.AddConstantN('krsFmtWindowCaption', 'String').SetString(rsFmtWindowCaption);
  { TODO : Add progress callback }
  {CL.AddTypeS('TEmutecaProgressCallBack',
    'Function ( const Title, Info1, Info2' +
    ' : string; const Value, MaxValue : int64) : boolean');}
end;

(* === run-time registration functions === *)


{ TPSImport_uEmutecaCommon }
(*----------------------------------------------------------------------------*)
procedure TPSImport_uEmutecaCommon.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_uEmutecaCommon(CompExec.comp);
end;

(*----------------------------------------------------------------------------*)
procedure TPSImport_uEmutecaCommon.ExecImport1(CompExec: TPSScript;
  const ri: TPSRuntimeClassImporter);
begin
  // RIRegister_uEmutecaCommon(ri);
end;

(*----------------------------------------------------------------------------*)


end.
