unit uPSI_ucEmutecaSoftManager;

{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis.
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface

uses
  SysUtils
  , Classes
  , uPSComponent
  , uPSRuntime
  , uPSCompiler;

type
  (*----------------------------------------------------------------------------*)
  TPSImport_ucEmutecaSoftManager = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript;
      const ri: TPSRuntimeClassImporter); override;
  end;


{ compile-time registration functions }
procedure SIRegister_cEmutecaSoftManager(CL: TPSPascalCompiler);
procedure SIRegister_ucEmutecaSoftManager(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_cEmutecaSoftManager(CL: TPSRuntimeClassImporter);
procedure RIRegister_ucEmutecaSoftManager(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
  LazUTF8
  , uaEmutecaManager
  , ucEmutecaSoftware
  , ucEmutecaSystemManager
  , ucEmutecaSystem
  , ucEmutecaGroupManager
  , ucEmutecaSoftManager;

procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ucEmutecaSoftManager]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_cEmutecaSoftManager(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'caEmutecaManager', 'cEmutecaSoftManager') do
  with CL.AddClassN(CL.FindClass('caEmutecaManager'), 'cEmutecaSoftManager') do
  begin
    RegisterProperty('GroupManager', 'cEmutecaGroupManager', iptrw);
    RegisterProperty('SystemManager', 'cEmutecaSystemManager', iptrw);
    RegisterProperty('VisibleList', 'cEmutecaSoftList', iptr);
    RegisterMethod('Function ItemById( aId : string; Autocreate : boolean) : cEmutecaSoftware');
    RegisterMethod('Procedure FilterBySystem( aSystem : cEmutecaSystem)');
    RegisterProperty('FullList', 'cEmutecaSoftList', iptr);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_ucEmutecaSoftManager(CL: TPSPascalCompiler);
begin
  CL.AddConstantN('rsLoadingVersionList', 'String').SetString(
    'Loading software list...');
  CL.AddConstantN('rsSavingVersionList', 'String').SetString(
    'Saving software list...');
  SIRegister_cEmutecaSoftManager(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure cEmutecaSoftManagerFullList_R(Self: cEmutecaSoftManager;
  var T: cEmutecaSoftList);
begin
  T := Self.FullList;
end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaSoftManagerVisibleList_R(Self: cEmutecaSoftManager;
  var T: cEmutecaSoftList);
begin
  T := Self.VisibleList;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_cEmutecaSoftManager(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(cEmutecaSoftManager) do
  begin
    RegisterPropertyHelper(@cEmutecaSoftManagerVisibleList_R,
      nil, 'VisibleList');
    RegisterMethod(@cEmutecaSoftManager.ItemById, 'ItemById');
    RegisterPropertyHelper(@cEmutecaSoftManagerFullList_R, nil, 'FullList');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_ucEmutecaSoftManager(CL: TPSRuntimeClassImporter);
begin
  RIRegister_cEmutecaSoftManager(CL);
end;


{ TPSImport_ucEmutecaSoftManager }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ucEmutecaSoftManager.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ucEmutecaSoftManager(CompExec.comp);
end;

(*----------------------------------------------------------------------------*)
procedure TPSImport_ucEmutecaSoftManager.ExecImport1(CompExec: TPSScript;
  const ri: TPSRuntimeClassImporter);
begin
  RIRegister_ucEmutecaSoftManager(ri);
end;

(*----------------------------------------------------------------------------*)


end.
