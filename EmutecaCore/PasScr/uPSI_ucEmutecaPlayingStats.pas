unit uPSI_ucEmutecaPlayingStats;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_ucEmutecaPlayingStats = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_cEmutecaPlayingStats(CL: TPSPascalCompiler);
procedure SIRegister_ucEmutecaPlayingStats(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_cEmutecaPlayingStats(CL: TPSRuntimeClassImporter);
procedure RIRegister_ucEmutecaPlayingStats(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   dateutils
  ,IniFiles
  ,uCHXStrUtils
  ,ucEmutecaPlayingStats
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_ucEmutecaPlayingStats]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_cEmutecaPlayingStats(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TComponent', 'cEmutecaPlayingStats') do
  with CL.AddClassN(CL.FindClass('TComponent'),'cEmutecaPlayingStats') do
  begin
    RegisterMethod('Procedure AddPlayingTime( const Stop : TDateTime; Start : TDateTime)');
    RegisterMethod('Procedure WriteToIni( aIniFile : TCustomIniFile; const Section : string)');
    RegisterMethod('Procedure LoadFromIni( aIniFile : TCustomIniFile; const Section : string)');
    RegisterProperty('LastTime', 'TDateTime', iptrw);
    RegisterProperty('TimesPlayed', 'longword', iptrw);
    RegisterProperty('PlayingTime', 'longword', iptrw);
    RegisterProperty('IconIndex', 'Integer', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_ucEmutecaPlayingStats(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('krsIniKeyPlayingTime','String').SetString( 'PlayingTime');
 CL.AddConstantN('krsIniKeyTimesPlayed','String').SetString( 'TimesPlayed');
 CL.AddConstantN('krsIniKeyLastTime','String').SetString( 'LastTime');
  SIRegister_cEmutecaPlayingStats(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure cEmutecaPlayingStatsIconIndex_W(Self: cEmutecaPlayingStats; const T: Integer);
begin Self.IconIndex := T; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaPlayingStatsIconIndex_R(Self: cEmutecaPlayingStats; var T: Integer);
begin T := Self.IconIndex; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaPlayingStatsPlayingTime_W(Self: cEmutecaPlayingStats; const T: longword);
begin Self.PlayingTime := T; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaPlayingStatsPlayingTime_R(Self: cEmutecaPlayingStats; var T: longword);
begin T := Self.PlayingTime; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaPlayingStatsTimesPlayed_W(Self: cEmutecaPlayingStats; const T: longword);
begin Self.TimesPlayed := T; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaPlayingStatsTimesPlayed_R(Self: cEmutecaPlayingStats; var T: longword);
begin T := Self.TimesPlayed; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaPlayingStatsLastTime_W(Self: cEmutecaPlayingStats; const T: TDateTime);
begin Self.LastTime := T; end;

(*----------------------------------------------------------------------------*)
procedure cEmutecaPlayingStatsLastTime_R(Self: cEmutecaPlayingStats; var T: TDateTime);
begin T := Self.LastTime; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_cEmutecaPlayingStats(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(cEmutecaPlayingStats) do
  begin
    RegisterMethod(@cEmutecaPlayingStats.AddPlayingTime, 'AddPlayingTime');
    RegisterMethod(@cEmutecaPlayingStats.WriteToIni, 'WriteToIni');
    RegisterMethod(@cEmutecaPlayingStats.LoadFromIni, 'LoadFromIni');
    RegisterPropertyHelper(@cEmutecaPlayingStatsLastTime_R,@cEmutecaPlayingStatsLastTime_W,'LastTime');
    RegisterPropertyHelper(@cEmutecaPlayingStatsTimesPlayed_R,@cEmutecaPlayingStatsTimesPlayed_W,'TimesPlayed');
    RegisterPropertyHelper(@cEmutecaPlayingStatsPlayingTime_R,@cEmutecaPlayingStatsPlayingTime_W,'PlayingTime');
    RegisterPropertyHelper(@cEmutecaPlayingStatsIconIndex_R,@cEmutecaPlayingStatsIconIndex_W,'IconIndex');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_ucEmutecaPlayingStats(CL: TPSRuntimeClassImporter);
begin
  RIRegister_cEmutecaPlayingStats(CL);
end;

 
 
{ TPSImport_ucEmutecaPlayingStats }
(*----------------------------------------------------------------------------*)
procedure TPSImport_ucEmutecaPlayingStats.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_ucEmutecaPlayingStats(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_ucEmutecaPlayingStats.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_ucEmutecaPlayingStats(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
