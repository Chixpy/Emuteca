unit uPSI_uaCHXStorable;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_uaCHXStorable = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_caCHXStorableTxt(CL: TPSPascalCompiler);
procedure SIRegister_caCHXStorableIni(CL: TPSPascalCompiler);
procedure SIRegister_caCHXStorable(CL: TPSPascalCompiler);
procedure SIRegister_uaCHXStorable(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_caCHXStorableTxt(CL: TPSRuntimeClassImporter);
procedure RIRegister_caCHXStorableIni(CL: TPSRuntimeClassImporter);
procedure RIRegister_caCHXStorable(CL: TPSRuntimeClassImporter);
procedure RIRegister_uaCHXStorable(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   IniFiles
  ,LazUTF8
  ,LazFileUtils
  ,uaCHXStorable
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_uaCHXStorable]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_caCHXStorableTxt(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'caCHXStorable', 'caCHXStorableTxt') do
  with CL.AddClassN(CL.FindClass('caCHXStorable'),'caCHXStorableTxt') do
  begin
    RegisterMethod('Procedure LoadFromFileTxt( TxtFile : TStrings)');
    RegisterMethod('Procedure SaveToFileTxt( TxtFile : TStrings; const ExportMode : boolean)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_caCHXStorableIni(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'caCHXStorable', 'caCHXStorableIni') do
  with CL.AddClassN(CL.FindClass('caCHXStorable'),'caCHXStorableIni') do
  begin
    RegisterMethod('Procedure LoadFromFileIni( IniFile : TCustomIniFile)');
    RegisterMethod('Procedure SaveToFileIni( IniFile : TCustomIniFile; const ExportMode : boolean)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_caCHXStorable(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TComponent', 'caCHXStorable') do
  with CL.AddClassN(CL.FindClass('TComponent'),'caCHXStorable') do
  begin
    RegisterMethod('Procedure LoadFromFile( FileName : string)');
    RegisterMethod('Procedure SaveToFile( FileName : string; const ExportMode : boolean)');
    RegisterProperty('DataFile', 'string', iptrw);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_uaCHXStorable(CL: TPSPascalCompiler);
begin
  SIRegister_caCHXStorable(CL);
  SIRegister_caCHXStorableIni(CL);
  SIRegister_caCHXStorableTxt(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure caCHXStorableDataFile_W(Self: caCHXStorable; const T: string);
begin Self.DataFile := T; end;

(*----------------------------------------------------------------------------*)
procedure caCHXStorableDataFile_R(Self: caCHXStorable; var T: string);
begin T := Self.DataFile; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_caCHXStorableTxt(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(caCHXStorableTxt) do
  begin
   // RegisterVirtualAbstractMethod(@caCHXStorableTxt, @!.LoadFromFileTxt, 'LoadFromFileTxt');
   // RegisterVirtualAbstractMethod(@caCHXStorableTxt, @!.SaveToFileTxt, 'SaveToFileTxt');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_caCHXStorableIni(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(caCHXStorableIni) do
  begin
  //  RegisterVirtualAbstractMethod(@caCHXStorableIni, @!.LoadFromFileIni, 'LoadFromFileIni');
  //  RegisterVirtualAbstractMethod(@caCHXStorableIni, @!.SaveToFileIni, 'SaveToFileIni');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_caCHXStorable(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(caCHXStorable) do
  begin
   // RegisterVirtualAbstractMethod(@caCHXStorable, @!.LoadFromFile, 'LoadFromFile');
   // RegisterVirtualAbstractMethod(@caCHXStorable, @!.SaveToFile, 'SaveToFile');
    RegisterPropertyHelper(@caCHXStorableDataFile_R,@caCHXStorableDataFile_W,'DataFile');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_uaCHXStorable(CL: TPSRuntimeClassImporter);
begin
  RIRegister_caCHXStorable(CL);
  RIRegister_caCHXStorableIni(CL);
  RIRegister_caCHXStorableTxt(CL);
end;

 
 
{ TPSImport_uaCHXStorable }
(*----------------------------------------------------------------------------*)
procedure TPSImport_uaCHXStorable.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_uaCHXStorable(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_uaCHXStorable.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_uaCHXStorable(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
