unit uPSI_uPlayingStats;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_uPlayingStats = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_cPlayingStats(CL: TPSPascalCompiler);
procedure SIRegister_uPlayingStats(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_cPlayingStats(CL: TPSRuntimeClassImporter);
procedure RIRegister_uPlayingStats(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   dateutils
  ,uEmutecaStats
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_uPlayingStats]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_cPlayingStats(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TObject', 'cGameStats') do
  with CL.AddClassN(CL.FindClass('TObject'),'cPlayingStats') do
  begin
    RegisterProperty('LastTime', 'TDateTime', iptrw);
    RegisterProperty('TimesPlayed', 'LongWord', iptrw);
    RegisterProperty('PlayingTime', 'LongWord', iptrw);
    RegisterProperty('IconIndex', 'Integer', iptrw);
    RegisterMethod('Procedure IncTimesPlayed');
    RegisterMethod('Procedure AddPlayingTime( const Stop : TDateTime; Start : TDateTime)');
    RegisterMethod('Constructor Create');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_uPlayingStats(CL: TPSPascalCompiler);
begin
  SIRegister_cPlayingStats(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure cPlayingStatsIconIndex_W(Self: cPlayingStats; const T: Integer);
begin Self.IconIndex := T; end;

(*----------------------------------------------------------------------------*)
procedure cPlayingStatsIconIndex_R(Self: cPlayingStats; var T: Integer);
begin T := Self.IconIndex; end;

(*----------------------------------------------------------------------------*)
procedure cPlayingStatsPlayingTime_W(Self: cPlayingStats; const T: LongWord);
begin Self.PlayingTime := T; end;

(*----------------------------------------------------------------------------*)
procedure cPlayingStatsPlayingTime_R(Self: cPlayingStats; var T: LongWord);
begin T := Self.PlayingTime; end;

(*----------------------------------------------------------------------------*)
procedure cPlayingStatsTimesPlayed_W(Self: cPlayingStats; const T: LongWord);
begin Self.TimesPlayed := T; end;

(*----------------------------------------------------------------------------*)
procedure cPlayingStatsTimesPlayed_R(Self: cPlayingStats; var T: LongWord);
begin T := Self.TimesPlayed; end;

(*----------------------------------------------------------------------------*)
procedure cPlayingStatsLastTime_W(Self: cPlayingStats; const T: TDateTime);
begin Self.LastTime := T; end;

(*----------------------------------------------------------------------------*)
procedure cPlayingStatsLastTime_R(Self: cPlayingStats; var T: TDateTime);
begin T := Self.LastTime; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_cPlayingStats(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(cPlayingStats) do
  begin
    RegisterPropertyHelper(@cPlayingStatsLastTime_R,@cPlayingStatsLastTime_W,'LastTime');
    RegisterPropertyHelper(@cPlayingStatsTimesPlayed_R,@cPlayingStatsTimesPlayed_W,'TimesPlayed');
    RegisterPropertyHelper(@cPlayingStatsPlayingTime_R,@cPlayingStatsPlayingTime_W,'PlayingTime');
    RegisterPropertyHelper(@cPlayingStatsIconIndex_R,@cPlayingStatsIconIndex_W,'IconIndex');
    RegisterMethod(@cPlayingStats.AddPlayingTime, 'AddPlayingTime');
    RegisterConstructor(@cPlayingStats.Create, 'Create');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_uPlayingStats(CL: TPSRuntimeClassImporter);
begin
  RIRegister_cPlayingStats(CL);
end;

 
 
{ TPSImport_uPlayingStats }
(*----------------------------------------------------------------------------*)
procedure TPSImport_uPlayingStats.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_uPlayingStats(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_uPlayingStats.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_uPlayingStats(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
