unit uPSI_uGameGroup;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_uGameGroup = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_cGameGroup(CL: TPSPascalCompiler);
procedure SIRegister_uGameGroup(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_cGameGroup(CL: TPSRuntimeClassImporter);
procedure RIRegister_uGameGroup(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   contnrs
  ,IniFiles
  ,uCHXStrUtils
  ,FileUtil
  ,LazUTF8
  ,uEmutecaPlayingStats
  ,uEmutecaGameGroup
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_uGameGroup]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_cGameGroup(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'cGameStats', 'cGameGroup') do
  with CL.AddClassN(CL.FindClass('cGameStats'),'cGameGroup') do
  begin
    RegisterProperty('Key', 'String', iptrw);
    RegisterProperty('Name', 'String', iptrw);
    RegisterProperty('SortKey', 'String', iptrw);
    RegisterProperty('Year', 'String', iptrw);
    RegisterProperty('Developer', 'String', iptrw);
    RegisterProperty('Tags', 'TStrings', iptrw);
    RegisterProperty('MediaFileName', 'String', iptrw);
    RegisterProperty('DataString', 'String', iptrw);
    RegisterMethod('Procedure ExportData( aFilename : String; ExportMode : Boolean)');
    RegisterMethod('Procedure ExportDataIni( aIniFile : TCustomIniFile; ExportMode : Boolean)');
    RegisterMethod('Procedure ImportData( aFilename : String)');
    RegisterMethod('Procedure ImportDataIni( aIniFile : TCustomIniFile)');
    RegisterMethod('Constructor Create( aName : String)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_uGameGroup(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('CGAMEGROUPKEY','String').SetString( 'Group: ');
  SIRegister_cGameGroup(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure cGameGroupDataString_W(Self: cEmutecaGameGroup; const T: String);
begin Self.DataString := T; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupDataString_R(Self: cEmutecaGameGroup; var T: String);
begin T := Self.DataString; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupMediaFileName_W(Self: cEmutecaGameGroup; const T: String);
begin Self.MediaFileName := T; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupMediaFileName_R(Self: cEmutecaGameGroup; var T: String);
begin T := Self.MediaFileName; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupTags_W(Self: cEmutecaGameGroup; const T: TStrings);
begin Self.Tags := T; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupTags_R(Self: cEmutecaGameGroup; var T: TStrings);
begin T := Self.Tags; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupDeveloper_W(Self: cEmutecaGameGroup; const T: String);
begin Self.Developer := T; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupDeveloper_R(Self: cEmutecaGameGroup; var T: String);
begin T := Self.Developer; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupYear_W(Self: cEmutecaGameGroup; const T: String);
begin Self.Year := T; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupYear_R(Self: cEmutecaGameGroup; var T: String);
begin T := Self.Year; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupSortKey_W(Self: cEmutecaGameGroup; const T: String);
begin Self.SortKey := T; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupSortKey_R(Self: cEmutecaGameGroup; var T: String);
begin T := Self.SortKey; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupName_W(Self: cEmutecaGameGroup; const T: String);
begin Self.Name := T; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupName_R(Self: cEmutecaGameGroup; var T: String);
begin T := Self.Name; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupKey_W(Self: cEmutecaGameGroup; const T: String);
begin Self.Key := T; end;

(*----------------------------------------------------------------------------*)
procedure cGameGroupKey_R(Self: cEmutecaGameGroup; var T: String);
begin T := Self.Key; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_cGameGroup(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(cEmutecaGameGroup) do
  begin
    RegisterPropertyHelper(@cGameGroupKey_R,@cGameGroupKey_W,'Key');
    RegisterPropertyHelper(@cGameGroupName_R,@cGameGroupName_W,'Name');
    RegisterPropertyHelper(@cGameGroupSortKey_R,@cGameGroupSortKey_W,'SortKey');
    RegisterPropertyHelper(@cGameGroupYear_R,@cGameGroupYear_W,'Year');
    RegisterPropertyHelper(@cGameGroupDeveloper_R,@cGameGroupDeveloper_W,'Developer');
    RegisterPropertyHelper(@cGameGroupTags_R,@cGameGroupTags_W,'Tags');
    RegisterPropertyHelper(@cGameGroupMediaFileName_R,@cGameGroupMediaFileName_W,'MediaFileName');
    RegisterPropertyHelper(@cGameGroupDataString_R,@cGameGroupDataString_W,'DataString');
    RegisterMethod(@cEmutecaGameGroup.ExportData, 'ExportData');
    RegisterMethod(@cEmutecaGameGroup.ExportDataIni, 'ExportDataIni');
    RegisterMethod(@cEmutecaGameGroup.ImportData, 'ImportData');
    RegisterMethod(@cEmutecaGameGroup.ImportDataIni, 'ImportDataIni');
    RegisterConstructor(@cEmutecaGameGroup.Create, 'Create');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_uGameGroup(CL: TPSRuntimeClassImporter);
begin
  RIRegister_cGameGroup(CL);
end;

 
 
{ TPSImport_uGameGroup }
(*----------------------------------------------------------------------------*)
procedure TPSImport_uGameGroup.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_uGameGroup(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_uGameGroup.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_uGameGroup(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
